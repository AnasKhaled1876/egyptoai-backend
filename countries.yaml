openapi: 3.0.0
info:
  title: Countries API
  description: API for managing countries with flag images
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Local development server
  - url: https://your-production-url.com/api
    description: Production server

tags:
  - name: Countries
    description: Country management endpoints

paths:
  /countries:
    get:
      summary: Get all countries with pagination
      tags: [Countries]
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: List of countries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesListResponse'
    
    post:
      summary: Create a new country
      tags: [Countries]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCountryInput'
      responses:
        '201':
          description: Country created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'

  /countries/{id}:
    get:
      summary: Get country by ID
      tags: [Countries]
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Country details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryResponse'
        '404':
          $ref: '#/components/responses/NotFound'
    
    put:
      summary: Update a country
      tags: [Countries]
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCountryInput'
      responses:
        '200':
          description: Country updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
    
    delete:
      summary: Delete a country
      tags: [Countries]
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Country deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: Country ID
    page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        default: 1
        minimum: 1
      description: Page number
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        default: 10
        minimum: 1
        maximum: 100
      description: Number of items per page

  schemas:
    Country:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        code:
          type: string
          minLength: 2
          maxLength: 2
          example: "US"
          description: ISO 3166-1 alpha-2 country code
        name:
          type: string
          example: "United States"
        flagUrl:
          type: string
          format: uri
          example: "https://flagcdn.com/w320/us.png"
        language:
          type: string
          example: "English"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    
    CountryResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        data:
          type: object
          properties:
            country:
              $ref: '#/components/schemas/Country'
    
    CountriesListResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        data:
          type: object
          properties:
            countries:
              type: array
              items:
                $ref: '#/components/schemas/Country'
            pagination:
              $ref: '#/components/schemas/Pagination'
    
    CreateCountryInput:
      type: object
      required:
        - code
        - name
        - flagUrl
      properties:
        code:
          type: string
          minLength: 2
          maxLength: 2
          example: "US"
          description: ISO 3166-1 alpha-2 country code
        name:
          type: string
          example: "United States"
        flagUrl:
          type: string
          format: uri
          example: "https://flagcdn.com/w320/us.png"
        language:
          type: string
          example: "English"
    
    UpdateCountryInput:
      type: object
      properties:
        code:
          type: string
          minLength: 2
          maxLength: 2
          example: "US"
          description: ISO 3166-1 alpha-2 country code
        name:
          type: string
          example: "United States of America"
        flagUrl:
          type: string
          format: uri
          example: "https://flagcdn.com/w320/us.png"
        language:
          type: string
          example: "English, Spanish"
    
    Pagination:
      type: object
      properties:
        total:
          type: integer
          example: 100
        page:
          type: integer
          example: 1
        limit:
          type: integer
          example: 10
        totalPages:
          type: integer
          example: 10
    
    DeleteResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        data:
          type: object
          properties:
            id:
              type: string
              format: uuid
              example: "123e4567-e89b-12d3-a456-426614174000"
        message:
          type: string
          example: "Country deleted successfully"
  
  responses:
    BadRequest:
      description: Bad Request - Invalid input
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: boolean
                example: false
              error:
                type: string
                example: "Validation Error"
              message:
                type: string
                example: "Invalid input data"
    
    NotFound:
      description: Not Found - Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: boolean
                example: false
              error:
                type: string
                example: "Not Found"
              message:
                type: string
                example: "Country not found"
    
    Conflict:
      description: Conflict - Resource already exists
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: boolean
                example: false
              error:
                type: string
                example: "Conflict"
              message:
                type: string
                example: "Country with this code already exists"