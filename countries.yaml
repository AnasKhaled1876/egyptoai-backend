openapi: 3.0.0
info:
  title: Countries API
  description: API for managing countries with flag images
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Local development server
  - url: https://your-production-url.com/api
    description: Production server

tags:
  - name: Countries
    description: Country management endpoints

paths:
  /countries/bulk:
    post:
      summary: Create multiple countries at once
      description: Creates multiple countries in a single request. Skips any countries that already exist.
      tags: [Countries]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - countries
              properties:
                countries:
                  type: array
                  minItems: 1
                  maxItems: 100
                  items:
                    $ref: '#/components/schemas/CreateCountryInput'
      responses:
        '201':
          description: Countries created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      created:
                        type: integer
                        description: Number of countries created
                        example: 3
                      skipped:
                        type: integer
                        description: Number of countries skipped (already exist)
                        example: 2
                      countries:
                        type: array
                        items:
                          $ref: '#/components/schemas/Country'
                  message:
                    type: string
                    example: "Countries created successfully"
        '400':
          description: Bad Request - Invalid input
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                  - type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      error:
                        type: string
                        example: "Validation Error"
                      message:
                        type: string
                        example: "Each country must have code, name, flagUrl, and language"
                      invalidEntries:
                        type: array
                        items:
                          type: object
        '409':
          description: Conflict - All countries already exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Conflict"
                  message:
                    type: string
                    example: "All countries already exist"
                  existingCodes:
                    type: array
                    items:
                      type: string
                      example: "US"
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    Country:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        code:
          type: string
          minLength: 2
          maxLength: 2
          example: "US"
          description: ISO 3166-1 alpha-2 country code
        name:
          type: string
          example: "United States"
        flagUrl:
          type: string
          format: uri
          example: "https://flagcdn.com/w320/us.png"
        language:
          type: string
          example: "English"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CreateCountryInput:
      type: object
      required:
        - code
        - name
        - flagUrl
      properties:
        code:
          type: string
          minLength: 2
          maxLength: 2
          example: "US"
          description: ISO 3166-1 alpha-2 country code
        name:
          type: string
          example: "United States"
        flagUrl:
          type: string
          format: uri
          example: "https://flagcdn.com/w320/us.png"
        language:
          type: string
          example: "English"

    ErrorResponse:
      type: object
      properties:
        status:
          type: boolean
          example: false
        error:
          type: string
          example: "Error Type"
        message:
          type: string
          example: "Error message describing what went wrong"

  responses:
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            status: false
            error: "Internal Server Error"
            message: "An unexpected error occurred"